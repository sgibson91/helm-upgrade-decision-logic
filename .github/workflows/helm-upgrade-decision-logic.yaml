name: Deploy hubs

on:
  push:
    branches:
      - main
    paths:
      - "**/*.yaml"
      - "mymodule/**"
  pull_request:
    branches:
      - main
    paths:
      - "**/*.yaml"
      - "mymodule/**"

jobs:
  generate-jobs:
    runs-on: ubuntu-latest
    outputs:
      prod-hub-matrix-jobs: ${{ steps.generated-jobs.outputs.prod-hub-matrix-jobs }}
      support-and-staging-matrix-jobs: ${{ steps.generated-jobs.outputs.support-and-staging-matrix-jobs }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruamel.yaml rich

      - uses: jitterbit/get-changed-files@v1
        id: changed-files
        with:
          format: space-delimited
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run python script
        id: generated-jobs
        run: |
          # I know, I'm writing the worst Python ever here. I'm just fudging things to get all the workflows running.
          python -m mymodule.helm_upgrade_decision_logic "${{ steps.changed-files.outputs.added_modified }}"

      - name: Run python script with pretty-print
        run: |
          # I know, I'm writing the worst Python ever here. I'm just fudging things to get all the workflows running.
          python -m mymodule.helm_upgrade_decision_logic "${{ steps.changed-files.outputs.added_modified }}" --pretty-print

  support-staging-jobs:
    runs-on: ubuntu-latest
    needs: generate-jobs
    strategy:
      fail-fast: false
      matrix:
        jobs: ${{ toJson(needs.generate-jobs.outputs.support-and-staging-matrix-jobs) }}
    steps:
      - run: |
          echo "Provider: ${{ matrix.jobs.provider }}"
          echo "Cluster name: ${{ matrix.jobs.cluster_name }}"
          echo "Upgrade Support?: ${{ matrix.jobs.upgrade_support }}"
          echo "Upgrade Staging?: ${{ matrix.jobs.upgrade_staging }}"

  # hub-jobs:
  #   runs-on: ubuntu-latest
  #   needs: [generate-jobs, support-staging-jobs]
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       jobs: ${{ needs.generate-jobs.outputs.prod-hub-matrix-jobs }}
  #   steps:
  #     - run: |
  #         echo "Provider: ${{ matrix.jobs.provider }}"
  #         echo "Cluster name: ${{ matrix.jobs.cluster_name }}"
  #         echo "Hub name: ${{ matrix.jobs.hub_name }}"
