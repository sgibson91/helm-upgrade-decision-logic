name: Deploy hubs

on:
  push:
    branches:
      - main
    paths:
      - "**/*.yaml"
      - "mymodule/**"
  pull_request:
    branches:
      - main
    paths:
      - "**/*.yaml"
      - "mymodule/**"

jobs:
  generate-jobs:
    runs-on: ubuntu-latest
    outputs:
      support-matrix-jobs: ${{ steps.generated-jobs.outputs.support-matrix-jobs}}
      staging-hub-matrix-jobs: ${{ steps.generated-jobs.outputs.staging-hub-matrix-jobs }}
      prod-hub-matrix-jobs: ${{ steps.generated-jobs.outputs.prod-hub-matrix-jobs }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - uses: dorny/paths-filter@v3
        id: changed-files
        with:
          token: ""
          list-files: csv
          filters: |
            changed:
              - added|modified: helm-charts/**
              - added|modified: config/clusters/**

      - run: |
          echo "${{ steps.changed-files.outputs }}"
          echo "${{ steps.changed-files.outputs.changed_files }}"

      - id: generated-jobs
        run: |
          # I know, I'm writing the worst Python ever here. I'm just fudging things to get all the workflows running.
          python -m mymodule.helm_upgrade_decision_logic "${{ steps.changed-files.outputs.changed_files }}"

      - name: Run python script with pretty-print
        run: |
          # I know, I'm writing the worst Python ever here. I'm just fudging things to get all the workflows running.
          python -m mymodule.helm_upgrade_decision_logic "${{ steps.changed-files.outputs.added_modified }}" --pretty-print

  upgrade-support:
    runs-on: ubuntu-latest
    needs: [generate-jobs]
    if: |
      !cancelled() &&
      (github.event_name == 'push' && contains(github.ref, 'main')) &&
      needs.generate-jobs.result == 'success' &&
      needs.generate-jobs.outputs.support-matrix-jobs != ''
    strategy:
      fail-fast: false
      matrix:
        jobs: ${{ fromJson(needs.generate-jobs.outputs.support-matrix-jobs) }}
    steps:
      - run: |
          echo "Provider: ${{ matrix.jobs.provider }}"
          echo "Cluster name: ${{ matrix.jobs.cluster_name }}"
          echo "Reason for Redeploy: ${{ matrix.jobs.reason_for_redeploy }}"

  upgrade-staging:
    runs-on: ubuntu-latest
    needs: [generate-jobs, upgrade-support]
    if: |
      !cancelled() &&
      (github.event_name == 'push' && contains(github.ref, 'main')) &&
      needs.generate-jobs.result == 'success' &&
      (needs.upgrade-support.result == 'success' || needs.upgrade-support.result == 'skipped') &&
      needs.generate-jobs.outputs.staging-hub-matrix-jobs != ''
    strategy:
      fail-fast: false
      matrix:
        jobs: ${{ fromJson(needs.generate-jobs.outputs.staging-hub-matrix-jobs) }}
    steps:
      - run: |
          echo "Provider: ${{ matrix.jobs.provider }}"
          echo "Cluster name: ${{ matrix.jobs.cluster_name }}"
          echo "Hub name: ${{ matrix.jobs.hub_name }}"

  upgrade-prod:
    runs-on: ubuntu-latest
    needs: [generate-jobs, upgrade-staging]
    if: |
      !cancelled() &&
      (github.event_name == 'push' && contains(github.ref, 'main')) &&
      needs.generate-jobs.result == 'success' &&
      needs.generate-jobs.outputs.prod-hub-matrix-jobs != ''
    strategy:
      fail-fast: false
      matrix:
        jobs: ${{ fromJson(needs.generate-jobs.outputs.prod-hub-matrix-jobs) }}
    steps:
      - run: |
          echo "Provider: ${{ matrix.jobs.provider }}"
          echo "Cluster name: ${{ matrix.jobs.cluster_name }}"
          echo "Hub name: ${{ matrix.jobs.hub_name }}"
